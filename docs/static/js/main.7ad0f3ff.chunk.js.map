{"version":3,"sources":["components/AddCategory.jsx","components/GifGridItem.jsx","helpers/getGift.js","components/GifGrid.jsx","hooks/useFetchGifs.js","App.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gift","map","img","images","downsized_medium","console","log","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","App","categories","ReactDOM","render","document","getElementById"],"mappings":"6MA6BeA,EA1BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAezC,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,YCIZG,EATK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAChC,OACE,yBAAKC,UAAU,+CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UACpDF,GAFmB,+DAIFG,MAAMR,GAJJ,cAIfS,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAGtCiB,QAAQC,IAAIP,GAbS,kBAcdC,GAdc,4CAAH,sDCqBLO,EAjBC,SAAC,GAAkB,IAAhBd,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACdrB,mBAAS,CACjC2B,KAAM,GACNS,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OARAC,qBAAU,WACRnB,EAAQC,GAAUmB,MAAK,SAACV,GACtBQ,EAAS,CACPX,KAAMG,EACNM,SAAS,SAGZ,CAACf,IACGgB,EDZmBI,CAAapB,GAA/BM,EADwB,EACxBA,KAAMS,EADkB,EAClBA,QAEd,OACE,oCACE,wBAAInB,UAAU,qCAAqCI,GAElDe,GAAW,uBAAGnB,UAAU,2BAAb,eACZ,yBAAKA,UAAU,aACZU,EAAKE,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,eAAaY,IAAKZ,EAAIhB,IAAQgB,UEQzBa,MAlBf,WAAgB,IAAD,EACuB3C,mBAAS,CAAC,cADjC,mBACN4C,EADM,KACM7C,EADN,KAGb,OACE,yBAAKkB,UAAU,OACb,+CACA,kBAAC,EAAD,CAAalB,cAAeA,IAC5B,6BAEA,4BACG6C,EAAWf,KAAI,SAACR,GACf,OAAO,kBAAC,EAAD,CAASqB,IAAKrB,EAAUA,SAAUA,UCVnDwB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.7ad0f3ff.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=cyKkZWc0zZPCRtXYGYSU7zlGz0Sh17ws`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gift = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    };\r\n  });\r\n  console.log(data);\r\n  return gift;\r\n};\r\n","import React from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n      {loading && <p className=\"animated animate__flash\">Cargando...</p>}\r\n      <div className=\"card-grid\">\r\n        {data.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGift';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((img) => {\r\n      setstate({\r\n        data: img,\r\n        loading: false\r\n      });\r\n    });\r\n  }, [category]);\r\n  return state;\r\n};\r\n\r\n//export default useFetchGifs;\r\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nfunction App() {\n  const [categories, setCategories] = useState(['one punch']);\n\n  return (\n    <div className=\"App\">\n      <h1>GIft Expert App</h1>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map((category) => {\n          return <GifGrid key={category} category={category} />;\n        })}\n      </ol>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}